// Generated by view binder compiler. Do not edit!
package com.ecostay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecostay.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityActivityReserveBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnBookActivity;

  @NonNull
  public final TextView tvActivityDescription;

  @NonNull
  public final TextView tvActivityPrice;

  @NonNull
  public final TextView tvActivityTitle;

  private ActivityActivityReserveBinding(@NonNull ScrollView rootView,
      @NonNull Button btnBookActivity, @NonNull TextView tvActivityDescription,
      @NonNull TextView tvActivityPrice, @NonNull TextView tvActivityTitle) {
    this.rootView = rootView;
    this.btnBookActivity = btnBookActivity;
    this.tvActivityDescription = tvActivityDescription;
    this.tvActivityPrice = tvActivityPrice;
    this.tvActivityTitle = tvActivityTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityActivityReserveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityActivityReserveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_activity_reserve, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityActivityReserveBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBookActivity;
      Button btnBookActivity = ViewBindings.findChildViewById(rootView, id);
      if (btnBookActivity == null) {
        break missingId;
      }

      id = R.id.tvActivityDescription;
      TextView tvActivityDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvActivityDescription == null) {
        break missingId;
      }

      id = R.id.tvActivityPrice;
      TextView tvActivityPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvActivityPrice == null) {
        break missingId;
      }

      id = R.id.tvActivityTitle;
      TextView tvActivityTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvActivityTitle == null) {
        break missingId;
      }

      return new ActivityActivityReserveBinding((ScrollView) rootView, btnBookActivity,
          tvActivityDescription, tvActivityPrice, tvActivityTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
