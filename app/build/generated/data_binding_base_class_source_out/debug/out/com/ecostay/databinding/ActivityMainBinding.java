// Generated by view binder compiler. Do not edit!
package com.ecostay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecostay.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnActivities;

  @NonNull
  public final Button btnBookRoom;

  @NonNull
  public final Button btnBookingHistory;

  @NonNull
  public final Button btnInfo;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnProfile;

  @NonNull
  public final TextView tvRecommendations;

  @NonNull
  public final TextView tvWelcomeUser;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Button btnActivities,
      @NonNull Button btnBookRoom, @NonNull Button btnBookingHistory, @NonNull Button btnInfo,
      @NonNull Button btnLogout, @NonNull Button btnProfile, @NonNull TextView tvRecommendations,
      @NonNull TextView tvWelcomeUser) {
    this.rootView = rootView;
    this.btnActivities = btnActivities;
    this.btnBookRoom = btnBookRoom;
    this.btnBookingHistory = btnBookingHistory;
    this.btnInfo = btnInfo;
    this.btnLogout = btnLogout;
    this.btnProfile = btnProfile;
    this.tvRecommendations = tvRecommendations;
    this.tvWelcomeUser = tvWelcomeUser;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnActivities;
      Button btnActivities = ViewBindings.findChildViewById(rootView, id);
      if (btnActivities == null) {
        break missingId;
      }

      id = R.id.btnBookRoom;
      Button btnBookRoom = ViewBindings.findChildViewById(rootView, id);
      if (btnBookRoom == null) {
        break missingId;
      }

      id = R.id.btnBookingHistory;
      Button btnBookingHistory = ViewBindings.findChildViewById(rootView, id);
      if (btnBookingHistory == null) {
        break missingId;
      }

      id = R.id.btnInfo;
      Button btnInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnInfo == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnProfile;
      Button btnProfile = ViewBindings.findChildViewById(rootView, id);
      if (btnProfile == null) {
        break missingId;
      }

      id = R.id.tvRecommendations;
      TextView tvRecommendations = ViewBindings.findChildViewById(rootView, id);
      if (tvRecommendations == null) {
        break missingId;
      }

      id = R.id.tvWelcomeUser;
      TextView tvWelcomeUser = ViewBindings.findChildViewById(rootView, id);
      if (tvWelcomeUser == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, btnActivities, btnBookRoom,
          btnBookingHistory, btnInfo, btnLogout, btnProfile, tvRecommendations, tvWelcomeUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
