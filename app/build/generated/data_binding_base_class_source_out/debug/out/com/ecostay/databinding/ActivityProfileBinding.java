// Generated by view binder compiler. Do not edit!
package com.ecostay.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ecostay.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnBookings;

  @NonNull
  public final Button btnLogout;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final EditText etName;

  @NonNull
  public final EditText etPreferences;

  private ActivityProfileBinding(@NonNull ScrollView rootView, @NonNull Button btnBookings,
      @NonNull Button btnLogout, @NonNull Button btnUpdate, @NonNull EditText etEmail,
      @NonNull EditText etName, @NonNull EditText etPreferences) {
    this.rootView = rootView;
    this.btnBookings = btnBookings;
    this.btnLogout = btnLogout;
    this.btnUpdate = btnUpdate;
    this.etEmail = etEmail;
    this.etName = etName;
    this.etPreferences = etPreferences;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBookings;
      Button btnBookings = ViewBindings.findChildViewById(rootView, id);
      if (btnBookings == null) {
        break missingId;
      }

      id = R.id.btnLogout;
      Button btnLogout = ViewBindings.findChildViewById(rootView, id);
      if (btnLogout == null) {
        break missingId;
      }

      id = R.id.btnUpdate;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.etEmail;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.etName;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.etPreferences;
      EditText etPreferences = ViewBindings.findChildViewById(rootView, id);
      if (etPreferences == null) {
        break missingId;
      }

      return new ActivityProfileBinding((ScrollView) rootView, btnBookings, btnLogout, btnUpdate,
          etEmail, etName, etPreferences);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
